{"version":3,"sources":["services/authentication-service.ts","pages/login.tsx","pages/page-not-found.tsx","helpers/format-type.ts","models/mock-pokemon.ts","services/pokemon-service.ts","components/pokemon-form.tsx","models/pokemon.ts","pages/pokemon-add.tsx","helpers/format-date.ts","components/loader.tsx","pages/pokemon-detail.tsx","pages/pokemon-edit.tsx","components/pokemon-card.tsx","components/pokemon-search.tsx","pages/pokemon-list.tsx","PrivateRoute.tsx","App.tsx","index.tsx"],"names":["AuthenticationService","username","password","isAuthenticated","Promise","resolve","setTimeout","Login","history","useHistory","useState","value","form","setForm","message","setMessage","handleInputChange","e","fieldName","target","name","fieldValue","newField","handleSubmit","preventDefault","newForm","length","error","isValid","validateForm","login","then","push","onSubmit","className","htmlFor","id","type","onChange","PageNotFound","src","alt","to","formatType","color","POKEMONS","hp","cp","picture","types","created","Date","PokemonService","this","isDev","fetch","response","json","catch","handleError","pokemons","data","isEmpty","find","pokemon","method","body","JSON","stringify","headers","index","findIndex","filter","term","includes","Object","keys","console","process","PokemonForm","isEditForm","hasType","addPokemon","updatePokemon","isAddForm","startsWith","endsWith","test","isTypesValid","style","width","margin","onClick","deletePokemon","map","marginBottom","disabled","checked","concat","currentType","selectType","Pokemon","PokemonAdd","getTime","formatDate","date","getDate","getMonth","getFullYear","Loader","PokemonsDetail","match","setPokemon","useEffect","getPokemon","params","PokemonEdit","PokemonCard","borderColor","setColor","onMouseEnter","onMouseLeave","PokemonSearch","setTerm","setPokemons","placeholder","searchPokemon","PokemonList","getPokemons","position","bottom","right","PrivateRoute","Component","component","rest","render","props","pathname","App","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.67e34f73.chunk.js","sourcesContent":["export default class AuthenticationService {\r\n  static isAuthenticated: boolean = false;\r\n\r\n  static login(username: string, password: string): Promise<boolean> {\r\n    const isAuthenticated = username === \"pikachu\" && password === \"pikachu\";\r\n\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        this.isAuthenticated = isAuthenticated;\r\n        resolve(isAuthenticated);\r\n      }, 1000);\r\n    });\r\n  }\r\n}\r\n","import React, { FunctionComponent, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AuthenticationService from \"../services/authentication-service\";\r\n\r\ntype Field = {\r\n  value?: any;\r\n  error?: string;\r\n  isValid?: boolean;\r\n};\r\n\r\ntype Form = {\r\n  username: Field;\r\n  password: Field;\r\n};\r\n\r\nconst Login: FunctionComponent = () => {\r\n  const history = useHistory();\r\n\r\n  const [form, setForm] = useState<Form>({\r\n    username: { value: \"\" },\r\n    password: { value: \"\" },\r\n  });\r\n\r\n  const [message, setMessage] = useState<string>(\r\n    \"Vous êtes déconnecté. (pikachu / pikachu)\"\r\n  );\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const fieldName: string = e.target.name;\r\n    const fieldValue: string = e.target.value;\r\n    const newField: Field = { [fieldName]: { value: fieldValue } };\r\n\r\n    setForm({ ...form, ...newField });\r\n  };\r\n\r\n  const validateForm = () => {\r\n    let newForm: Form = form;\r\n\r\n    // Validator username\r\n    if (form.username.value.length < 3) {\r\n      const errorMsg: string =\r\n        \"Votre identifiant doit faire au moins 3 caractères de long.\";\r\n      const newField: Field = {\r\n        value: form.username.value,\r\n        error: errorMsg,\r\n        isValid: false,\r\n      };\r\n      newForm = { ...newForm, ...{ username: newField } };\r\n    } else {\r\n      const newField: Field = {\r\n        value: form.username.value,\r\n        error: \"\",\r\n        isValid: true,\r\n      };\r\n      newForm = { ...newForm, ...{ username: newField } };\r\n    }\r\n\r\n    // Validator password\r\n    if (form.password.value.length < 6) {\r\n      const errorMsg: string =\r\n        \"Votre mot de passe doit faire au moins 6 caractères de long.\";\r\n      const newField: Field = {\r\n        value: form.password.value,\r\n        error: errorMsg,\r\n        isValid: false,\r\n      };\r\n      newForm = { ...newForm, ...{ password: newField } };\r\n    } else {\r\n      const newField: Field = {\r\n        value: form.password.value,\r\n        error: \"\",\r\n        isValid: true,\r\n      };\r\n      newForm = { ...newForm, ...{ password: newField } };\r\n    }\r\n\r\n    setForm(newForm);\r\n\r\n    return newForm.username.isValid && newForm.password.isValid;\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const isFormValid = validateForm();\r\n    if (isFormValid) {\r\n      setMessage(\"👉 Tentative de connexion en cours ...\");\r\n      AuthenticationService.login(\r\n        form.username.value,\r\n        form.password.value\r\n      ).then((isAuthenticated) => {\r\n        if (!isAuthenticated) {\r\n          setMessage(\"🔐 Identifiant ou mot de passe incorrect.\");\r\n          return;\r\n        }\r\n\r\n        history.push(\"/pokemons\");\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={(e) => handleSubmit(e)}>\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m8 offset-m2\">\r\n          <div className=\"card hoverable\">\r\n            <div className=\"card-stacked\">\r\n              <div className=\"card-content\">\r\n                {/* Form message */}\r\n                {message && (\r\n                  <div className=\"form-group\">\r\n                    <div className=\"card-panel grey lighten-5\">{message}</div>\r\n                  </div>\r\n                )}\r\n                {/* Field username */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Identifiant</label>\r\n                  <input\r\n                    id=\"username\"\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    className=\"form-control\"\r\n                    value={form.username.value}\r\n                    onChange={(e) => handleInputChange(e)}\r\n                  ></input>\r\n                  {/* error */}\r\n                  {form.username.error && (\r\n                    <div className=\"card-panel red accent-1\">\r\n                      {form.username.error}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                {/* Field password */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Mot de passe</label>\r\n                  <input\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    className=\"form-control\"\r\n                    value={form.password.value}\r\n                    onChange={(e) => handleInputChange(e)}\r\n                  ></input>\r\n                  {/* error */}\r\n                  {form.password.error && (\r\n                    <div className=\"card-panel red accent-1\">\r\n                      {form.password.error}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"card-action center\">\r\n                {/* Submit button */}\r\n                <button type=\"submit\" className=\"btn\">\r\n                  Valider\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PageNotFound: FunctionComponent = () => {\r\n  return (\r\n    <div className=\"center\">\r\n      <img\r\n        src=\"http://assets.pokemon.com/assets/cms2/img/pokedex/full/035.png\"\r\n        alt=\"Page non trouvée\"\r\n      />\r\n      <h1>Hey, cette page n'existe pas !</h1>\r\n      <Link to=\"/\" className=\"waves-effect waves-teal btn-flat\">\r\n        Retourner à l'accueil\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageNotFound;\r\n","const formatType = (type: string): string => {\r\n  let color: string;\r\n\r\n  switch (type) {\r\n    case \"Feu\":\r\n      color = \"red lighten-1\";\r\n      break;\r\n    case \"Eau\":\r\n      color = \"blue lighten-1\";\r\n      break;\r\n    case \"Plante\":\r\n      color = \"green lighten-1\";\r\n      break;\r\n    case \"Insecte\":\r\n      color = \"brown lighten-1\";\r\n      break;\r\n    case \"Normal\":\r\n      color = \"grey lighten-3\";\r\n      break;\r\n    case \"Vol\":\r\n      color = \"blue lighten-3\";\r\n      break;\r\n    case \"Poison\":\r\n      color = \"deep-purple accent-1\";\r\n      break;\r\n    case \"Fée\":\r\n      color = \"pink lighten-4\";\r\n      break;\r\n    case \"Psy\":\r\n      color = \"deep-purple darken-2\";\r\n      break;\r\n    case \"Electrik\":\r\n      color = \"lime accent-1\";\r\n      break;\r\n    case \"Combat\":\r\n      color = \"deep-orange\";\r\n      break;\r\n    default:\r\n      color = \"grey\";\r\n      break;\r\n  }\r\n\r\n  return `chip ${color}`;\r\n};\r\n\r\nexport default formatType;\r\n","import Pokemon from \"./pokemon\";\r\n\r\nexport const POKEMONS: Pokemon[] = [\r\n  {\r\n    id: 1,\r\n    name: \"Bulbizarre\",\r\n    hp: 25,\r\n    cp: 5,\r\n    picture:\r\n      \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/001.png\",\r\n    types: [\"Plante\", \"Poison\"],\r\n    created: new Date(),\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Salamèche\",\r\n    hp: 28,\r\n    cp: 6,\r\n    picture:\r\n      \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/004.png\",\r\n    types: [\"Feu\"],\r\n    created: new Date(),\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Carapuce\",\r\n    hp: 21,\r\n    cp: 4,\r\n    picture:\r\n      \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/007.png\",\r\n    types: [\"Eau\"],\r\n    created: new Date(),\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Aspicot\",\r\n    hp: 16,\r\n    cp: 2,\r\n    picture:\r\n      \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/013.png\",\r\n    types: [\"Insecte\", \"Poison\"],\r\n    created: new Date(),\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Roucool\",\r\n    hp: 30,\r\n    cp: 7,\r\n    picture:\r\n      \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/016.png\",\r\n    types: [\"Normal\", \"Vol\"],\r\n    created: new Date(),\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Rattata\",\r\n    hp: 18,\r\n    cp: 6,\r\n    picture:\r\n      \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/019.png\",\r\n    types: [\"Normal\"],\r\n    created: new Date(),\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"Piafabec\",\r\n    hp: 14,\r\n    cp: 5,\r\n    picture:\r\n      \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/021.png\",\r\n    types: [\"Normal\", \"Vol\"],\r\n    created: new Date(),\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"Abo\",\r\n    hp: 16,\r\n    cp: 4,\r\n    picture:\r\n      \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/023.png\",\r\n    types: [\"Poison\"],\r\n    created: new Date(),\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"Pikachu\",\r\n    hp: 21,\r\n    cp: 7,\r\n    picture:\r\n      \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/025.png\",\r\n    types: [\"Electrik\"],\r\n    created: new Date(),\r\n  },\r\n  {\r\n    id: 10,\r\n    name: \"Sabelette\",\r\n    hp: 19,\r\n    cp: 3,\r\n    picture:\r\n      \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/027.png\",\r\n    types: [\"Normal\"],\r\n    created: new Date(),\r\n  },\r\n  {\r\n    id: 11,\r\n    name: \"Mélofée\",\r\n    hp: 25,\r\n    cp: 5,\r\n    picture:\r\n      \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/035.png\",\r\n    types: [\"Fée\"],\r\n    created: new Date(),\r\n  },\r\n  {\r\n    id: 12,\r\n    name: \"Groupix\",\r\n    hp: 17,\r\n    cp: 8,\r\n    picture:\r\n      \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/037.png\",\r\n    types: [\"Feu\"],\r\n    created: new Date(),\r\n  },\r\n];\r\n\r\nexport default POKEMONS;\r\n","import Pokemon from \"../models/pokemon\";\r\nimport POKEMONS from \"../models/mock-pokemon\";\r\n\r\nexport default class PokemonService {\r\n  static pokemons: Pokemon[] = POKEMONS;\r\n\r\n  static isDev =\r\n    !process.env.NODE_ENV || process.env.NODE_ENV === \"development\";\r\n\r\n  static getPokemons(): Promise<Pokemon[]> {\r\n    if (this.isDev) {\r\n      return fetch(\"http://localhost:3001/pokemons\")\r\n        .then((response) => response.json())\r\n        .catch((error) => this.handleError(error));\r\n    }\r\n\r\n    return new Promise((resolve) => {\r\n      resolve(this.pokemons);\r\n    });\r\n  }\r\n\r\n  static getPokemon(id: number): Promise<Pokemon | null> {\r\n    if (this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons/${id}`)\r\n        .then((response) => response.json())\r\n        .then((data) => (this.isEmpty(data) ? null : data))\r\n        .catch((error) => this.handleError(error));\r\n    }\r\n\r\n    return new Promise((resolve) => {\r\n      resolve(this.pokemons.find((pokemon) => id === pokemon.id));\r\n    });\r\n  }\r\n\r\n  static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\r\n    if (this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(pokemon),\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      })\r\n        .then((response) => response.json())\r\n        .catch((error) => this.handleError(error));\r\n    }\r\n\r\n    return new Promise((resolve) => {\r\n      const { id } = pokemon;\r\n      const index = this.pokemons.findIndex((pokemon) => pokemon.id === id);\r\n      this.pokemons[index] = pokemon;\r\n      resolve(pokemon);\r\n    });\r\n  }\r\n\r\n  static deletePokemon(pokemon: Pokemon): Promise<{}> {\r\n    if (this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\r\n        method: \"DELETE\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      })\r\n        .then((response) => response.json())\r\n        .catch((error) => this.handleError(error));\r\n    }\r\n\r\n    return new Promise((resolve) => {\r\n      const { id } = pokemon;\r\n      this.pokemons = this.pokemons.filter((pokemon) => pokemon.id !== id);\r\n      resolve({});\r\n    });\r\n  }\r\n\r\n  static addPokemon(pokemon: Pokemon): Promise<Pokemon> {\r\n    pokemon.created = new Date(pokemon.created);\r\n\r\n    if (this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(pokemon),\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      })\r\n        .then((response) => response.json())\r\n        .catch((error) => this.handleError(error));\r\n    }\r\n\r\n    return new Promise((resolve) => {\r\n      this.pokemons.push(pokemon);\r\n      resolve(pokemon);\r\n    });\r\n  }\r\n\r\n  static searchPokemon(term: string): Promise<Pokemon[]> {\r\n    if (this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons?q=${term}`)\r\n        .then((response) => response.json())\r\n        .catch((error) => this.handleError(error));\r\n    }\r\n\r\n    return new Promise((resolve) => {\r\n      const results = this.pokemons.filter((pokemon) =>\r\n        pokemon.name.includes(term)\r\n      );\r\n      resolve(results);\r\n    });\r\n  }\r\n\r\n  static isEmpty(data: Object): boolean {\r\n    return Object.keys(data).length === 0;\r\n  }\r\n\r\n  static handleError(error: Error): void {\r\n    console.error(error);\r\n  }\r\n}\r\n","import React, { FunctionComponent, useState } from \"react\";\r\nimport Pokemon from \"../models/pokemon\";\r\nimport formatType from \"../helpers/format-type\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PokemonService from \"../services/pokemon-service\";\r\n\r\ntype Props = {\r\n  pokemon: Pokemon;\r\n  isEditForm: boolean;\r\n};\r\n\r\ntype Field = {\r\n  value?: any;\r\n  error?: string;\r\n  isValid?: boolean;\r\n};\r\n\r\ntype Form = {\r\n  picture: Field;\r\n  name: Field;\r\n  hp: Field;\r\n  cp: Field;\r\n  types: Field;\r\n};\r\n\r\nconst PokemonForm: FunctionComponent<Props> = ({ pokemon, isEditForm }) => {\r\n  const [form, setForm] = useState<Form>({\r\n    picture: { value: pokemon.picture },\r\n    name: { value: pokemon.name, isValid: true },\r\n    hp: { value: pokemon.hp, isValid: true },\r\n    cp: { value: pokemon.cp, isValid: true },\r\n    types: { value: pokemon.types, isValid: true },\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  const types: string[] = [\r\n    \"Plante\",\r\n    \"Feu\",\r\n    \"Eau\",\r\n    \"Insecte\",\r\n    \"Normal\",\r\n    \"Electrik\",\r\n    \"Poison\",\r\n    \"Fée\",\r\n    \"Vol\",\r\n    \"Combat\",\r\n    \"Psy\",\r\n  ];\r\n\r\n  const hasType = (type: string): boolean => {\r\n    return form.types.value.includes(type);\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const fieldName: string = e.target.name;\r\n    const fieldValue: string = e.target.value;\r\n    const newField: Field = { [fieldName]: { value: fieldValue } };\r\n\r\n    setForm({ ...form, ...newField });\r\n  };\r\n\r\n  const selectType = (\r\n    type: string,\r\n    e: React.ChangeEvent<HTMLInputElement>\r\n  ): void => {\r\n    const checked = e.target.checked;\r\n    let newField: Field;\r\n\r\n    if (checked) {\r\n      //Si l'utilisateur coche un type, cela l'ajoute à la liste des types de pokémon\r\n      const newTypes: string[] = form.types.value.concat([type]);\r\n      newField = { value: newTypes };\r\n    } else {\r\n      //Si l'utilisateur décoche un type, on le retire de la liste des types du pokémon\r\n      const newTypes: string[] = form.types.value.filter(\r\n        (currentType: string) => currentType !== type\r\n      );\r\n      newField = { value: newTypes };\r\n    }\r\n\r\n    setForm({ ...form, ...{ types: newField } });\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const isFormValid = validateForm();\r\n    if (isFormValid) {\r\n      pokemon.picture = form.picture.value;\r\n      pokemon.name = form.name.value;\r\n      pokemon.hp = form.hp.value;\r\n      pokemon.cp = form.cp.value;\r\n      pokemon.types = form.types.value;\r\n\r\n      isEditForm ? updatePokemon() : addPokemon();\r\n    }\r\n  };\r\n\r\n  const addPokemon = () => {\r\n    PokemonService.addPokemon(pokemon).then(() => history.push(\"/pokemons\"));\r\n  };\r\n\r\n  const updatePokemon = () => {\r\n    PokemonService.updatePokemon(pokemon).then(() =>\r\n      history.push(`/pokemons/${pokemon.id}`)\r\n    );\r\n  };\r\n\r\n  const deletePokemon = () => {\r\n    PokemonService.deletePokemon(pokemon).then(() => history.push(`/pokemons`));\r\n  };\r\n\r\n  const isAddForm = () => {\r\n    return !isEditForm;\r\n  };\r\n\r\n  const validateForm = () => {\r\n    let newForm: Form = form;\r\n\r\n    //Validator url\r\n    if (isAddForm()) {\r\n      const start =\r\n        \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/\";\r\n      const end = \".png\";\r\n\r\n      if (\r\n        !form.picture.value.startsWith(start) ||\r\n        !form.picture.value.endsWith(end)\r\n      ) {\r\n        const errorMsg: string = \"L'url n'est pas valide.\";\r\n        const newField: Field = {\r\n          value: form.picture.value,\r\n          error: errorMsg,\r\n          isValid: false,\r\n        };\r\n        newForm = { ...form, ...{ picture: newField } };\r\n      } else {\r\n        const newField: Field = {\r\n          value: form.picture.value,\r\n          error: \"\",\r\n          isValid: true,\r\n        };\r\n        newForm = { ...form, ...{ picture: newField } };\r\n      }\r\n    }\r\n\r\n    //Validator name\r\n    if (!/^[a-zA-Zàéè ]{3,25}$/.test(form.name.value)) {\r\n      const errorMsg: string = \"Le nom du pokémon est requis (1-25).\";\r\n      const newField: Field = {\r\n        value: form.name.value,\r\n        error: errorMsg,\r\n        isValid: false,\r\n      };\r\n      newForm = { ...newForm, ...{ name: newField } };\r\n    } else {\r\n      const newField: Field = {\r\n        value: form.name.value,\r\n        error: \"\",\r\n        isValid: true,\r\n      };\r\n      newForm = { ...newForm, ...{ name: newField } };\r\n    }\r\n\r\n    //Validator hp\r\n    if (!/^[0-9]{1,3}$/.test(form.hp.value)) {\r\n      const errorMsg: string =\r\n        \"Les points de vie du pokémon sont compris entre 0 et 999.\";\r\n      const newField: Field = {\r\n        value: form.hp.value,\r\n        error: errorMsg,\r\n        isValid: false,\r\n      };\r\n      newForm = { ...newForm, ...{ hp: newField } };\r\n    } else {\r\n      const newField: Field = {\r\n        value: form.hp.value,\r\n        error: \"\",\r\n        isValid: true,\r\n      };\r\n      newForm = { ...newForm, ...{ hp: newField } };\r\n    }\r\n\r\n    //Validator cp\r\n    if (!/^[0-9]{1,2}$/.test(form.cp.value)) {\r\n      const errorMsg: string =\r\n        \"^Les dégâts du pokémon sont compris entre 0 et 99.\";\r\n      const newField: Field = {\r\n        value: form.cp.value,\r\n        error: errorMsg,\r\n        isValid: false,\r\n      };\r\n      newForm = { ...newForm, ...{ cp: newField } };\r\n    } else {\r\n      const newField: Field = {\r\n        value: form.cp.value,\r\n        error: \"\",\r\n        isValid: true,\r\n      };\r\n      newForm = { ...newForm, ...{ cp: newField } };\r\n    }\r\n\r\n    setForm(newForm);\r\n    return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\r\n  };\r\n\r\n  const isTypesValid = (type: string): boolean => {\r\n    if (form.types.value.length === 1 && hasType(type)) {\r\n      return false;\r\n    }\r\n\r\n    if (form.types.value.length >= 3 && !hasType(type)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={(e) => handleSubmit(e)}>\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m8 offset-m2\">\r\n          <div className=\"card hoverable\">\r\n            {isEditForm && (\r\n              <div className=\"card-image\">\r\n                <img\r\n                  src={pokemon.picture}\r\n                  alt={pokemon.name}\r\n                  style={{ width: \"250px\", margin: \"0 auto\" }}\r\n                />\r\n                <span className=\"btn-floating halfway-fab waves-effect waves-light\">\r\n                  <i onClick={deletePokemon} className=\"material-icons\">\r\n                    delete\r\n                  </i>\r\n                </span>\r\n              </div>\r\n            )}\r\n            <div className=\"card-stacked\">\r\n              <div className=\"card-content\">\r\n                {/* Pokemon picture */}\r\n                {isAddForm() && (\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"picture\">Image</label>\r\n                    <input\r\n                      id=\"picture\"\r\n                      name=\"picture\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      value={form.picture.value}\r\n                      onChange={(e) => handleInputChange(e)}\r\n                    ></input>\r\n                    {form.picture.error && (\r\n                      <div className=\"card-panel red accent-1\">\r\n                        {form.picture.error}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n                {/* Pokemon name */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"name\">Nom</label>\r\n                  <input\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    value={form.name.value}\r\n                    onChange={(e) => handleInputChange(e)}\r\n                  ></input>\r\n                  {form.name.error && (\r\n                    <div className=\"card-panel red accent-1\">\r\n                      {form.name.error}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                {/* Pokemon hp */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"hp\">Point de vie</label>\r\n                  <input\r\n                    id=\"hp\"\r\n                    name=\"hp\"\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    value={form.hp.value}\r\n                    onChange={(e) => handleInputChange(e)}\r\n                  ></input>\r\n                  {form.hp.error && (\r\n                    <div className=\"card-panel red accent-1\">\r\n                      {form.hp.error}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                {/* Pokemon cp */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"cp\">Dégâts</label>\r\n                  <input\r\n                    id=\"cp\"\r\n                    name=\"cp\"\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    value={form.cp.value}\r\n                    onChange={(e) => handleInputChange(e)}\r\n                  ></input>\r\n                  {form.cp.error && (\r\n                    <div className=\"card-panel red accent-1\">\r\n                      {form.cp.error}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                {/* Pokemon types */}\r\n                <div className=\"form-group\">\r\n                  <label>Types</label>\r\n                  {types.map((type) => (\r\n                    <div key={type} style={{ marginBottom: \"10px\" }}>\r\n                      <label>\r\n                        <input\r\n                          id={type}\r\n                          type=\"checkbox\"\r\n                          className=\"filled-in\"\r\n                          value={type}\r\n                          disabled={!isTypesValid(type)}\r\n                          checked={hasType(type)}\r\n                          onChange={(e) => selectType(type, e)}\r\n                        ></input>\r\n                        <span>\r\n                          <p className={formatType(type)}>{type}</p>\r\n                        </span>\r\n                      </label>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div className=\"card-action center\">\r\n                {/* Submit button */}\r\n                <button type=\"submit\" className=\"btn\">\r\n                  Valider\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PokemonForm;\r\n","export default class Pokemon {\r\n  // 1. Typage des propiétés d'un pokémon.\r\n  id: number;\r\n  hp: number;\r\n  cp: number;\r\n  name: string;\r\n  picture: string;\r\n  types: Array<string>;\r\n  created: Date;\r\n\r\n  // 2. Définition des valeurs par défaut des propriétés d'un pokémon.\r\n  constructor(\r\n    id: number,\r\n    hp: number = 100,\r\n    cp: number = 10,\r\n    name: string = \"...\",\r\n    picture: string = \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/XXX.png\",\r\n    types: Array<string> = [\"Normal\"],\r\n    created: Date = new Date()\r\n  ) {\r\n    // 3. Initialisation des propiétés d'un pokémons.\r\n    this.id = id;\r\n    this.hp = hp;\r\n    this.cp = cp;\r\n    this.name = name;\r\n    this.picture = picture;\r\n    this.types = types;\r\n    this.created = created;\r\n  }\r\n}\r\n","import React, { FunctionComponent, useState } from \"react\";\r\nimport PokemonForm from \"../components/pokemon-form\";\r\nimport Pokemon from \"../models/pokemon\";\r\n\r\nconst PokemonAdd: FunctionComponent = () => {\r\n  const [id] = useState<number>(new Date().getTime());\r\n  const [pokemon] = useState<Pokemon>(new Pokemon(id));\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2 className=\"header center\">Ajouter un pokémon</h2>\r\n      <PokemonForm pokemon={pokemon} isEditForm={false}></PokemonForm>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonAdd;\r\n","const formatDate = (date: Date = new Date()): string => {\r\n  return `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\r\n};\r\n\r\nexport default formatDate;\r\n","import React, { FunctionComponent } from \"react\";\r\n\r\nconst Loader: FunctionComponent = () => {\r\n  return (\r\n    <div className=\"preloader-wrapper big active\">\r\n      <div className=\"spinner-layer spinner-blue\">\r\n        <div className=\"circle-clipper left\">\r\n          <div className=\"circle\"></div>\r\n        </div>\r\n        <div className=\"gap-patch\">\r\n          <div className=\"circle\"></div>\r\n        </div>\r\n        <div className=\"circle-clipper right\">\r\n          <div className=\"circle\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { FunctionComponent, useState, useEffect } from \"react\";\r\nimport { RouteComponentProps, Link } from \"react-router-dom\";\r\nimport Pokemon from \"../models/pokemon\";\r\nimport formatDate from \"../helpers/format-date\";\r\nimport formatType from \"../helpers/format-type\";\r\nimport PokemonService from \"../services/pokemon-service\";\r\nimport Loader from \"../components/loader\";\r\n\r\ntype Params = { id: string };\r\n\r\nconst PokemonsDetail: FunctionComponent<RouteComponentProps<Params>> = ({\r\n  match,\r\n}) => {\r\n  const [pokemon, setPokemon] = useState<Pokemon | null>(null);\r\n\r\n  useEffect(() => {\r\n    PokemonService.getPokemon(+match.params.id).then((pokemon) =>\r\n      setPokemon(pokemon)\r\n    );\r\n  }, [match.params.id]);\r\n\r\n  return (\r\n    <div>\r\n      {pokemon ? (\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m8 offset-m2\">\r\n            <h2 className=\"header center\">{pokemon.name}</h2>\r\n            <div className=\"card hoverable\">\r\n              <div className=\"card-image\">\r\n                <img\r\n                  src={pokemon.picture}\r\n                  alt={pokemon.name}\r\n                  style={{ width: \"250px\", margin: \"0 auto\" }}\r\n                />\r\n                <Link\r\n                  to={`/pokemons/edit/${pokemon.id}`}\r\n                  className=\"btn btn-floating halfway-fab waves-effect waves-light\"\r\n                >\r\n                  <i className=\"material-icons\">edit</i>\r\n                </Link>\r\n              </div>\r\n              <div className=\"card-stacked\">\r\n                <div className=\"card-content\">\r\n                  <table className=\"bordered striped\">\r\n                    <tbody>\r\n                      <tr>\r\n                        <td>Nom</td>\r\n                        <td>\r\n                          <strong>{pokemon.name}</strong>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Points de vie</td>\r\n                        <td>\r\n                          <strong>{pokemon.hp}</strong>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Dégâts</td>\r\n                        <td>\r\n                          <strong>{pokemon.cp}</strong>\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Types</td>\r\n                        <td>\r\n                          {pokemon.types.map((type) => (\r\n                            <span key={type} className={formatType(type)}>\r\n                              {type}\r\n                            </span>\r\n                          ))}\r\n                        </td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Date de création</td>\r\n                        <td>{formatDate(pokemon.created)}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                <div className=\"card-action\">\r\n                  <Link to=\"/\">Retour</Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h4 className=\"center\">\r\n          <Loader></Loader>\r\n        </h4>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonsDetail;\r\n","import React, { FunctionComponent, useState, useEffect } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport Loader from \"../components/loader\";\r\nimport PokemonForm from \"../components/pokemon-form\";\r\nimport Pokemon from \"../models/pokemon\";\r\nimport PokemonService from \"../services/pokemon-service\";\r\n\r\ntype Params = { id: string };\r\n\r\nconst PokemonEdit: FunctionComponent<RouteComponentProps<Params>> = ({\r\n  match,\r\n}) => {\r\n  const [pokemon, setPokemon] = useState<Pokemon | null>(null);\r\n\r\n  useEffect(() => {\r\n    PokemonService.getPokemon(+match.params.id).then((pokemon) =>\r\n      setPokemon(pokemon)\r\n    );\r\n  }, [match.params.id]);\r\n\r\n  return (\r\n    <div>\r\n      {pokemon ? (\r\n        <div className=\"row\">\r\n          <h2 className=\"header center\">Éditer {pokemon.name}</h2>\r\n          <PokemonForm pokemon={pokemon} isEditForm={true}></PokemonForm>\r\n        </div>\r\n      ) : (\r\n        <h4 className=\"center\">\r\n          <Loader />\r\n        </h4>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonEdit;\r\n","import React, { FunctionComponent, useState } from \"react\";\r\nimport formatDate from \"../helpers/format-date\";\r\nimport formatType from \"../helpers/format-type\";\r\nimport Pokemon from \"../models/pokemon\";\r\nimport \"./pokemon-card.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\ntype Props = {\r\n  pokemon: Pokemon;\r\n  borderColor?: string;\r\n};\r\n\r\nconst PokemonCard: FunctionComponent<Props> = ({\r\n  pokemon,\r\n  borderColor = \"#009688\",\r\n}) => {\r\n  const [color, setColor] = useState<string>();\r\n  const history = useHistory();\r\n\r\n  const showBorder = () => {\r\n    setColor(borderColor);\r\n  };\r\n\r\n  const hideBorder = () => {\r\n    setColor(\"#f5f5f5\"); //On remet la bordure en gris\r\n  };\r\n\r\n  const goToPokemon = (id: number) => {\r\n    history.push(`/pokemons/${id}`);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"col s6 m4\"\r\n      onMouseEnter={showBorder}\r\n      onMouseLeave={hideBorder}\r\n      onClick={() => goToPokemon(pokemon.id)}\r\n    >\r\n      <div className=\"card horizontal\" style={{ borderColor: color }}>\r\n        <div className=\"card-image\">\r\n          <img src={pokemon.picture} alt={pokemon.name} />\r\n        </div>\r\n        <div className=\"card-stacked\">\r\n          <div className=\"card-content\">\r\n            <p>{pokemon.name}</p>\r\n            <p>\r\n              <small>{formatDate(pokemon.created)}</small>\r\n            </p>\r\n            {pokemon.types.map((type) => (\r\n              <span key={type} className={formatType(type)}>\r\n                {type}\r\n              </span>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonCard;\r\n","import React, { FunctionComponent, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Pokemon from \"../models/pokemon\";\r\nimport PokemonService from \"../services/pokemon-service\";\r\n\r\nconst PokemonSearch: FunctionComponent = () => {\r\n  const [term, setTerm] = useState<string>(\"\");\r\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const term = e.target.value;\r\n    setTerm(term);\r\n\r\n    if (term.length <= 1) {\r\n      setPokemons([]);\r\n      return;\r\n    }\r\n\r\n    PokemonService.searchPokemon(term).then((pokemons) =>\r\n      setPokemons(pokemons)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col s12 m6 offset-m3\">\r\n        <div className=\"card\">\r\n          <div className=\"card-content\">\r\n            <div className=\"input-field\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Rechercher un pokémon\"\r\n                value={term}\r\n                onChange={(e) => handleInputChange(e)}\r\n              />\r\n            </div>\r\n            <div className=\"collection\">\r\n              {pokemons.map((pokemon) => (\r\n                <Link\r\n                  key={pokemon.id}\r\n                  to={`/pokemons/${pokemon.id}`}\r\n                  className=\"collection-item\"\r\n                >\r\n                  {pokemon.name}\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonSearch;\r\n","import React, { FunctionComponent, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PokemonCard from \"../components/pokemon-card\";\r\nimport PokemonSearch from \"../components/pokemon-search\";\r\nimport Pokemon from \"../models/pokemon\";\r\nimport PokemonService from \"../services/pokemon-service\";\r\n\r\nconst PokemonList: FunctionComponent = () => {\r\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\r\n\r\n  useEffect(() => {\r\n    PokemonService.getPokemons().then((pokemons) => setPokemons(pokemons));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"center\">Pokédex</h1>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <PokemonSearch></PokemonSearch>\r\n          {pokemons.map((pokemon) => (\r\n            <PokemonCard key={pokemon.id} pokemon={pokemon} />\r\n          ))}\r\n        </div>\r\n        <Link\r\n          to={`/pokemon/add`}\r\n          className=\"btn-large btn-floating waves-effect waves-light red z-depth-3\"\r\n          style={{ position: \"fixed\", bottom: \"25px\", right: \"25px\" }}\r\n        >\r\n          <i className=\"material-icons\">add</i>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonList;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport AuthenticationService from \"./services/authentication-service\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }: any) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) => {\r\n      const isAuthenticated = AuthenticationService.isAuthenticated;\r\n      if (!isAuthenticated) {\r\n        return <Redirect to={{ pathname: \"/login\" }} />;\r\n      }\r\n\r\n      return <Component {...props} />;\r\n    }}\r\n  />\r\n);\r\n\r\nexport default PrivateRoute;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Login from \"./pages/login\";\r\nimport PageNotFound from \"./pages/page-not-found\";\r\nimport PokemonAdd from \"./pages/pokemon-add\";\r\nimport PokemonsDetail from \"./pages/pokemon-detail\";\r\nimport PokemonEdit from \"./pages/pokemon-edit\";\r\nimport PokemonList from \"./pages/pokemon-list\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\n\r\nconst App: FunctionComponent = () => {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        {/*La barre de navigation commun à toutes les pages */}\r\n        <nav>\r\n          <div className=\"nav-wrapper teal\">\r\n            <Link to=\"/\" className=\"brand-logo center\">\r\n              Pokédex\r\n            </Link>\r\n          </div>\r\n        </nav>\r\n        {/*Le système de gestion des routes de notre application */}\r\n        <Switch>\r\n          <PrivateRoute exact path=\"/\" component={PokemonList}></PrivateRoute>\r\n          <Route exact path=\"/login\" component={Login}></Route>\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/pokemons\"\r\n            component={PokemonList}\r\n          ></PrivateRoute>\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/pokemon/add\"\r\n            component={PokemonAdd}\r\n          ></PrivateRoute>\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/pokemons/edit/:id\"\r\n            component={PokemonEdit}\r\n          ></PrivateRoute>\r\n          <PrivateRoute\r\n            path=\"/pokemons/:id\"\r\n            component={PokemonsDetail}\r\n          ></PrivateRoute>\r\n          <Route component={PageNotFound} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}